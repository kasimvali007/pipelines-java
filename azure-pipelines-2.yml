# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'cc7f8527-03bf-4475-aa96-fa626c067c5e'

  # Web app name
  webAppName: 'Demo-Linux'

  # Environment name
  environmentName: 'Dev.Demo-Linux'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.war'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: deploymentJob
    displayName: WebApp
    environment: 
      name: Dev.Demo-Linux
      resourceType: VirtualMachine
      tags: demolinux
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo first deployment
          # - task: AzureWebApp@1
          #   displayName: 'Azure Web App Deploy: Demo-Linux'
          #   inputs:
          #     azureSubscription: $(azureSubscription)
          #     appType: webAppLinux
          #     appName: $(webAppName)
          #     package: '$(Pipeline.Workspace)/drop/**/target/*.war'